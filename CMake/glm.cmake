add_definitions(-D_CRT_SECURE_NO_WARNINGS)
# option(GLM_ENABLE_SIMD_AVX "Enable AVX optimizations" ON)
# option(GLM_ENABLE_SIMD_AVX2 "Enable AVX2 optimizations" OFF)
# option(GLM_ENABLE_SIMD_SSE42 "Enable SSE3 optimizations" OFF)
# option(GLM_ENABLE_SIMD_SSE2 "Enable SSE2 optimizations" OFF)
option(GLM_FORCE_PURE "Force 'pure' instructions" OFF)

if(GLM_FORCE_PURE)
	add_definitions(-DGLM_FORCE_PURE)
# elseif(GLM_ENABLE_SIMD_AVX2)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-mavx2)
# 	elseif(GVT_USE_ICC)
# 		add_definitions(-mavx2)
# 	elseif(MSVC)
# 		add_definitions(/arch:AVX2)
# 	endif()
# elseif(GLM_ENABLE_SIMD_AVX)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-mavx)
# 	elseif(GVT_USE_ICC)
# 		add_definitions(-mavx)
# 	elseif(MSVC)
# 		add_definitions(/arch:AVX)
# 	endif()
# elseif(GLM_ENABLE_SIMD_SSE42)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-msse42)
# 	elseif(GVT_USE_ICC)
# 		add_definitions(-msse42)
# 	elseif(MSVC)
# 		add_definitions(/arch:SSE42) # VC doesn't support /arch:SSE3
# 	endif()
# elseif(GLM_ENABLE_SIMD_SSE3)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-msse3)
# 	elseif(GVT_USE_ICC)
# 		add_definitions(-msse3)
# 	elseif(MSVC)
# 		add_definitions(/arch:SSE2) # VC doesn't support /arch:SSE3
# 	endif()
# elseif(GLM_ENABLE_SIMD_SSE2)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-msse2)
# 	elseif(GVT_USE_ICC)
# 		add_definitions(-msse2)
# 	elseif(MSVC)
# 		if(NOT CMAKE_CL_64)
# 			add_definitions(/arch:SSE2)
# 		endif()
# 	endif()
endif()

# option(GLM_ENABLE_FAST_MATH "Enable fast math optimizations" OFF)
# if(GLM_ENABLE_FAST_MATH)
# 	if(CMAKE_COMPILER_IS_GNUCXX)
# 		add_definitions(-ffast-math)
# 	endif()
#
# 	if(MSVC)
# 		add_definitions(/fp:fast)
# 	endif()
# elseif(NOT GLM_ENABLE_FAST_MATH)
# 	if(MSVC)
# 		add_definitions(/fp:precise)
# 	endif()
# endif()
